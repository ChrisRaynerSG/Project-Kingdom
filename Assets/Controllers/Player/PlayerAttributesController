using UnityEngine;


public class PlayerAttributesController : Monobehaviour{

    [HideInInspector]public static PlayerAttributesController instance;
    private PlayerAttributes playerAttributes;
    public PlayerAttributes PlayerAttributes{get{return playerAttributes;}}

    public TextMeshProUGUI strengthText;
    public TextMeshProUGUI dexterityText;
    public TextMeshProUGUI constitutionText;
    public TextMeshProUGUI intelligenceText;
    public TextMeshProUGUI wisdomText;
    public TextMeshProUGUI charismaText;
    public TextMeshProUGUI luckText;
    public TextMeshProUGUI perceptionText;


    public static GetInstance(){//Singleton pattern, should only ever be one instance of PlayerAttributesController (unless we want to have generations of player character?)
        if(instance == null)
        {
            playerAttributes = new PlayerAttributes();
            instance = this;
        }
        return instance;
    }

    public Start(){// update this later on to import player attributes from character creation, currently just creates player attributes all at 10.
        playerAttributes = new PlayerAttributes();
        instance = this;
        playerAttributes.OnPlayerAttributesChanged += UpdateAttributesText;
        strengthText.text = playerAttributes.strength.ToString();
        dexterityText.text = playerAttributes.dexterity.ToString();
        constitutionText.text = playerAttributes.constitution.ToString();
        intelligenceText.text = playerAttributes.intelligence.ToString();
        wisdomText.text = playerAttributes.wisdom.ToString();
        charismaText.text = playerAttributes.charisma.ToString();
        luckText.text = playerAttributes.luck.ToString();
        perceptionText.text = playerAttributes.perception.ToString();
    }

    
    public void UpdateAttributesText(){
        strengthText.text = playerAttributes.strength.ToString();
        dexterityText.text = playerAttributes.dexterity.ToString();
        constitutionText.text = playerAttributes.constitution.ToString();
        intelligenceText.text = playerAttributes.intelligence.ToString();
        wisdomText.text = playerAttributes.wisdom.ToString();
        charismaText.text = playerAttributes.charisma.ToString();
        luckText.text = playerAttributes.luck.ToString();
        perceptionText.text = playerAttributes.perception.ToString();
    }

}